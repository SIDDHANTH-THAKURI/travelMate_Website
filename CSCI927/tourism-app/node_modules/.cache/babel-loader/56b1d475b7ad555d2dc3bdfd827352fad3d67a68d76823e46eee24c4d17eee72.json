{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\siddh\\\\OneDrive\\\\Desktop\\\\NewGit\\\\CSCI927\\\\tourism-app\\\\src\\\\components\\\\Payment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Payment() {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: localStorage.getItem('userEmail') || '',\n    // Pre-fill the email and make it non-editable\n    contact: '',\n    numberOfPeople: 1,\n    // Start with one person by default\n    totalCost: 2500.00 // Start with the base cost for one person\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === \"numberOfPeople\") {\n      const totalCost = Math.min(value, 10) * 2500; // Calculate cost based on people count, max 10\n      setFormData({\n        ...formData,\n        numberOfPeople: value,\n        totalCost\n      });\n    } else {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/payment', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ...formData,\n          email: localStorage.getItem('userEmail'),\n          // Ensure email is up-to-date from storage\n          packageSelected: localStorage.getItem('selectedPackage') // Assume the package is stored in local storage\n        })\n      });\n      if (response.ok) {\n        navigate('/confirmation');\n      } else {\n        const errorData = await response.json();\n        alert('Payment failed. Please try again. ' + errorData.message);\n      }\n    } catch (error) {\n      console.error('Payment submission error:', error);\n      alert('Error processing payment.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Payment Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: formData.name,\n        onChange: handleChange,\n        placeholder: \"Your Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: formData.email,\n        readOnly: true // Email is not editable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"contact\",\n        value: formData.contact,\n        onChange: handleChange,\n        placeholder: \"Your Contact Number\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"numberOfPeople\",\n        value: formData.numberOfPeople,\n        onChange: handleChange,\n        children: [...Array(10)].map((_, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: index + 1,\n          children: index + 1\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Cost: $\", formData.totalCost.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Confirm Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Payment, \"Pn1jhhHOd9CBuSbuar4QGnxCok0=\", false, function () {\n  return [useNavigate];\n});\n_c = Payment;\nexport default Payment;\nvar _c;\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Payment","_s","navigate","formData","setFormData","name","email","localStorage","getItem","contact","numberOfPeople","totalCost","handleChange","e","value","target","Math","min","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","packageSelected","ok","errorData","json","alert","message","error","console","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","required","readOnly","Array","map","_","index","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/siddh/OneDrive/Desktop/NewGit/CSCI927/tourism-app/src/components/Payment.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Payment() {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: localStorage.getItem('userEmail') || '', // Pre-fill the email and make it non-editable\r\n    contact: '',\r\n    numberOfPeople: 1, // Start with one person by default\r\n    totalCost: 2500.00 // Start with the base cost for one person\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"numberOfPeople\") {\r\n      const totalCost = Math.min(value, 10) * 2500; // Calculate cost based on people count, max 10\r\n      setFormData({ ...formData, numberOfPeople: value, totalCost });\r\n    } else {\r\n      setFormData({ ...formData, [name]: value });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch('/payment', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          ...formData,\r\n          email: localStorage.getItem('userEmail'), // Ensure email is up-to-date from storage\r\n          packageSelected: localStorage.getItem('selectedPackage'), // Assume the package is stored in local storage\r\n        })\r\n      });\r\n      if (response.ok) {\r\n        navigate('/confirmation');\r\n      } else {\r\n        const errorData = await response.json();\r\n        alert('Payment failed. Please try again. ' + errorData.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Payment submission error:', error);\r\n      alert('Error processing payment.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <h1>Payment Details</h1>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={formData.name}\r\n          onChange={handleChange}\r\n          placeholder=\"Your Name\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={formData.email}\r\n          readOnly // Email is not editable\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"contact\"\r\n          value={formData.contact}\r\n          onChange={handleChange}\r\n          placeholder=\"Your Contact Number\"\r\n          required\r\n        />\r\n        <select name=\"numberOfPeople\" value={formData.numberOfPeople} onChange={handleChange}>\r\n          {[...Array(10)].map((_, index) => (\r\n            <option key={index} value={index + 1}>{index + 1}</option>\r\n          ))}\r\n        </select>\r\n        <p>Total Cost: ${formData.totalCost.toFixed(2)}</p>\r\n        <button type=\"submit\">Confirm Payment</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Payment;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}