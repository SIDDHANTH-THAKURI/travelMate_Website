{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\siddh\\\\OneDrive\\\\Desktop\\\\NewGit\\\\CSCI927\\\\tourism-app\\\\src\\\\components\\\\Payment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Payment() {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: localStorage.getItem('userEmail') || '',\n    contact: '',\n    packageSelected: localStorage.getItem('selectedPackage') || ''\n  });\n  const [paid, setPaid] = useState(false); // To track if payment was made\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === \"numberOfPeople\") {\n      const totalCost = 2500 * Math.min(value, 10); // Calculate cost based on people count, max 10\n      setFormData({\n        ...formData,\n        numberOfPeople: value,\n        totalCost\n      });\n    } else {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    }\n  };\n  const handlePayment = () => {\n    setPaid(true);\n    alert('Payment details added, click next to confirm booking.');\n  };\n  const handleConfirmBooking = async () => {\n    const bookingData = {\n      ...formData,\n      paymentStatus: paid ? 'Paid' : 'Not Paid'\n    };\n    try {\n      const response = await fetch('/payment', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bookingData)\n      });\n      if (response.ok) {\n        navigate('/confirmation');\n      } else {\n        const errorData = await response.json();\n        alert('Failed to confirm booking: ' + errorData.message);\n      }\n    } catch (error) {\n      console.error('Error confirming booking:', error);\n      alert('Error processing booking. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Payment Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: formData.name,\n        onChange: handleChange,\n        placeholder: \"Your Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: formData.email,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"contact\",\n        value: formData.contact,\n        onChange: handleChange,\n        placeholder: \"Your Contact Number\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"numberOfPeople\",\n        value: formData.numberOfPeople,\n        onChange: handleChange,\n        children: [...Array(10).keys()].map(i => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: i + 1,\n          children: i + 1\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 43\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Cost: $\", formData.totalCost.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Confirm Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(Payment, \"xMxGEcPa/Mboo/ZLuqqZbVomCqI=\", false, function () {\n  return [useNavigate];\n});\n_c = Payment;\nexport default Payment;\nvar _c;\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Payment","_s","navigate","formData","setFormData","name","email","localStorage","getItem","contact","packageSelected","paid","setPaid","handleChange","e","value","target","totalCost","Math","min","numberOfPeople","handlePayment","alert","handleConfirmBooking","bookingData","paymentStatus","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","message","error","console","children","onSubmit","handleSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","required","readOnly","Array","keys","map","i","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/siddh/OneDrive/Desktop/NewGit/CSCI927/tourism-app/src/components/Payment.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Payment() {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: localStorage.getItem('userEmail') || '',\r\n    contact: '',\r\n    packageSelected: localStorage.getItem('selectedPackage') || '',\r\n  });\r\n  const [paid, setPaid] = useState(false); // To track if payment was made\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"numberOfPeople\") {\r\n      const totalCost = 2500 * Math.min(value, 10); // Calculate cost based on people count, max 10\r\n      setFormData({...formData, numberOfPeople: value, totalCost});\r\n    } else {\r\n      setFormData({...formData, [name]: value});\r\n    }\r\n  };\r\n\r\n  const handlePayment = () => {\r\n    setPaid(true);\r\n    alert('Payment details added, click next to confirm booking.');\r\n  };\r\n\r\n  const handleConfirmBooking = async () => {\r\n    const bookingData = {\r\n      ...formData,\r\n      paymentStatus: paid ? 'Paid' : 'Not Paid',\r\n    };\r\n    try {\r\n      const response = await fetch('/payment', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(bookingData)\r\n      });\r\n      if (response.ok) {\r\n        navigate('/confirmation');\r\n      } else {\r\n        const errorData = await response.json();\r\n        alert('Failed to confirm booking: ' + errorData.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error confirming booking:', error);\r\n      alert('Error processing booking. Please try again later.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <h1>Payment Details</h1>\r\n        <input type=\"text\" name=\"name\" value={formData.name} onChange={handleChange} placeholder=\"Your Name\" required />\r\n        <input type=\"email\" name=\"email\" value={formData.email} readOnly />\r\n        <input type=\"text\" name=\"contact\" value={formData.contact} onChange={handleChange} placeholder=\"Your Contact Number\" required />\r\n        <select name=\"numberOfPeople\" value={formData.numberOfPeople} onChange={handleChange}>\r\n          {[...Array(10).keys()].map(i => <option key={i} value={i+1}>{i+1}</option>)}\r\n        </select>\r\n        <p>Total Cost: ${formData.totalCost.toFixed(2)}</p>\r\n        <button type=\"submit\">Confirm Payment</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Payment;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}