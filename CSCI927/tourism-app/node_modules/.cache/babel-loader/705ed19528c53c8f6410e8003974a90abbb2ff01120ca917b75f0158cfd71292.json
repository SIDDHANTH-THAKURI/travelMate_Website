{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\siddh\\\\OneDrive\\\\Desktop\\\\NewGit\\\\CSCI927\\\\tourism-app\\\\src\\\\components\\\\RoomBooking.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RoomBooking() {\n  _s();\n  const [rooms, setRooms] = useState([]);\n  const [selectedRoom, setSelectedRoom] = useState(null);\n  const [bookingDetails, setBookingDetails] = useState({\n    name: '',\n    contact: '',\n    date: new Date()\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Fetch available rooms when the component mounts\n  useEffect(() => {\n    const fetchRooms = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch('/api/rooms');\n        if (!response.ok) {\n          throw new Error('Something went wrong'); // Error handling for non-200 responses\n        }\n        const data = await response.json();\n        setRooms(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchRooms();\n  }, []);\n  const handleRoomSelect = room => {\n    setSelectedRoom(room);\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setBookingDetails(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    try {\n      const bookingData = {\n        ...bookingDetails,\n        roomId: selectedRoom.id\n      };\n      const response = await fetch('/api/bookRoom', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bookingData)\n      });\n      if (!response.ok) {\n        throw new Error('Booking failed');\n      }\n      const result = await response.json();\n      alert(result.message); // Display booking confirmation or error message\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Room Booking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading rooms...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select a Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), rooms.map(room => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleRoomSelect(room),\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [room.type, \" - $\", room.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this)\n      }, room.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, this)), selectedRoom && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: bookingDetails.name,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Contact:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"contact\",\n            value: bookingDetails.contact,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Date:\", /*#__PURE__*/_jsxDEV(DatePicker, {\n            selected: bookingDetails.date,\n            onChange: date => setBookingDetails({\n              ...bookingDetails,\n              date\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isLoading,\n          children: \"Book Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n_s(RoomBooking, \"CfJPL2Hj9f6ZT/7bYQdEd7DuwXA=\");\n_c = RoomBooking;\nexport default RoomBooking;\nvar _c;\n$RefreshReg$(_c, \"RoomBooking\");","map":{"version":3,"names":["React","useState","useEffect","DatePicker","jsxDEV","_jsxDEV","Fragment","_Fragment","RoomBooking","_s","rooms","setRooms","selectedRoom","setSelectedRoom","bookingDetails","setBookingDetails","name","contact","date","Date","isLoading","setIsLoading","error","setError","fetchRooms","response","fetch","ok","Error","data","json","err","message","handleRoomSelect","room","handleChange","e","value","target","prev","handleSubmit","preventDefault","bookingData","roomId","id","method","headers","body","JSON","stringify","result","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","type","price","onSubmit","onChange","required","selected","disabled","_c","$RefreshReg$"],"sources":["C:/Users/siddh/OneDrive/Desktop/NewGit/CSCI927/tourism-app/src/components/RoomBooking.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nfunction RoomBooking() {\r\n    const [rooms, setRooms] = useState([]);\r\n    const [selectedRoom, setSelectedRoom] = useState(null);\r\n    const [bookingDetails, setBookingDetails] = useState({ name: '', contact: '', date: new Date() });\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    // Fetch available rooms when the component mounts\r\n    useEffect(() => {\r\n        const fetchRooms = async () => {\r\n            setIsLoading(true);\r\n            try {\r\n                const response = await fetch('/api/rooms');\r\n                if (!response.ok) {\r\n                    throw new Error('Something went wrong'); // Error handling for non-200 responses\r\n                }\r\n                const data = await response.json();\r\n                setRooms(data);\r\n            } catch (err) {\r\n                setError(err.message);\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchRooms();\r\n    }, []);\r\n\r\n    const handleRoomSelect = (room) => {\r\n        setSelectedRoom(room);\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setBookingDetails(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setIsLoading(true);\r\n        try {\r\n            const bookingData = { ...bookingDetails, roomId: selectedRoom.id };\r\n            const response = await fetch('/api/bookRoom', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(bookingData)\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error('Booking failed');\r\n            }\r\n            const result = await response.json();\r\n            alert(result.message); // Display booking confirmation or error message\r\n        } catch (err) {\r\n            setError(err.message);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    if (error) {\r\n        return <p>Error: {error}</p>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Room Booking</h1>\r\n            {isLoading ? <p>Loading rooms...</p> : (\r\n                <>\r\n                    <h2>Select a Room</h2>\r\n                    {rooms.map(room => (\r\n                        <div key={room.id} onClick={() => handleRoomSelect(room)}>\r\n                            <h3>{room.type} - ${room.price}</h3>\r\n                        </div>\r\n                    ))}\r\n\r\n                    {selectedRoom && (\r\n                        <form onSubmit={handleSubmit}>\r\n                            <label>\r\n                                Name:\r\n                                <input type=\"text\" name=\"name\" value={bookingDetails.name} onChange={handleChange} required />\r\n                            </label>\r\n                            <label>\r\n                                Contact:\r\n                                <input type=\"text\" name=\"contact\" value={bookingDetails.contact} onChange={handleChange} required />\r\n                            </label>\r\n                            <label>\r\n                                Date:\r\n                                <DatePicker selected={bookingDetails.date} onChange={date => setBookingDetails({...bookingDetails, date})} />\r\n                            </label>\r\n                            <button type=\"submit\" disabled={isLoading}>Book Room</button>\r\n                        </form>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RoomBooking;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}